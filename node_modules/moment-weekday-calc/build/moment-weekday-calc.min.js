/*! moment-weekday-calc 1.0.6 andruhon <andrew@kondratev.pro> 2016-03-03 */
"undefined"!=typeof require&&(moment=require("moment")),function(a){function b(b,d,e,g,h,i){if(this.rangeStart=a(b),this.rangeEnd=a(d),this.exclusions=g,this.inclusions=h,this.useIsoWeekday=1==i,this.rangeStart.isAfter(this.rangeEnd))throw new c("rangeStart is after rangeEnd");this.weekdays=f(e,this.useIsoWeekday)}function c(a){this.message=a,this.name="WeekDayCalcException"}function d(b,c,d,e,g){this.rangeStart=a(b),this.useIsoWeekday=1==g,this.exclusions=d,this.inclusions=e,this.weekdays=f(c,this.useIsoWeekday)}function e(a){this.message=a,this.name="DaysSetConverterException"}b.prototype.calculate=function(){var a=0,b=this.rangeStart.clone().endOf("week"),c=this.rangeEnd.clone().startOf("week");if(c.diff(b,"days")<30||this.exclusions||this.inclusions)a=this.calculateIterative(this.rangeStart,this.rangeEnd,this.weekdays,this.exclusions,this.inclusions);else{var d=Math.round(c.diff(b,"weeks",!0));a+=d*this.weekdays.length,a+=this.calculateIterative(this.rangeStart,b,this.weekdays),a+=this.calculateIterative(c,this.rangeEnd,this.weekdays)}return a},b.prototype.calculateIterative=function(a,b,c,d,e){for(var f=0,h=a.clone(),i=g(d),j=g(e);h.valueOf()<=b.valueOf();){var k=this.useIsoWeekday?"isoWeekday":"weekday",l=h.format("YYYY-MM-DD"),m=0!=j.length&&j.indexOf(l)>=0;(m||c.indexOf(h[k]())>=0&&(0==i.length||i.indexOf(l)<0))&&f++,h.add(1,"day")}return f},Function.prototype.construct=function(a){var b=this,c=function(){b.apply(this,a)};return c.prototype=b.prototype,new c},c.prototype=new Error,b.prototype.WeekDayCalcException=c,d.prototype.calculate=function(a){var b=a,c=this.rangeStart.clone(),d=g(this.exclusions),e=g(this.inclusions),f=this.useIsoWeekday?"isoWeekday":"weekday";if(b>=0)for(;b>0;){c.add(1,"day");var h=0!=e.length&&e.indexOf(c.format("YYYY-MM-DD"))>=0;(h||this.weekdays.indexOf(c[f]())>=0&&(0==d.length||d.indexOf(c.format("YYYY-MM-DD"))<0))&&b--}else for(;0>b;){c.subtract(1,"day");var h=0!=e.length&&e.indexOf(c.format("YYYY-MM-DD"))>=0;(h||this.weekdays.indexOf(c[f]())>=0&&(0==d.length||d.indexOf(c.format("YYYY-MM-DD"))<0))&&b++}return c},e.prototype=new Error,d.prototype.DaysSetConverterException=e;var f=function(b,d){var e=[];if(!b)throw new c("weekdays must be defined");if(b.length>7)throw new c("Weekdays array exceeding week length of 7 days");for(var f=0;f<b.length;f++){var g=b[f];if(d){if(isNaN(g))throw new c("isoWeekDayCalc accepts weekdays as numbers only, try using weekdayCalc if you need a locale aware behaviour");if(1>g||g>7)throw new c("The weekday is out of 1 to 7 range")}else if(isNaN(g))g=a().day(g).weekday();else if(0>g||g>6)throw new c("The weekday is out of 0 to 6 range");if(e.indexOf(g)>=0)throw new c("Weekdays set contains duplicate weekday");e.push(g)}return e},g=function(b){var c=[];if(b)for(;b.length>0;)c.push(a(b.shift()).format("YYYY-MM-DD"));return c};b.calculateWeekdays=function(d,arguments,e){var f,g,h,i,j;switch(e=!!e,arguments.length){case 5:i=arguments[3],j=arguments[4];case 4:i=arguments[3];case 3:f=a(arguments[0]).startOf("day"),g=a(arguments[1]).endOf("day"),h=arguments[2];break;case 2:f=d,g=arguments[0],h=arguments[1];break;case 1:var k=arguments[0];k&&k.rangeEnd&&k.weekdays?(f=k.rangeStart?a(k.rangeStart).startOf("day"):d,g=a(k.rangeEnd).endOf("day"),h=k.weekdays,i=k.exclusions,j=k.inclusions):(f=d.clone().startOf("year"),g=d.clone().endOf("year"),h=k);break;default:new c("unexpected arguments length "+arguments.length+". Expecting 1 to 4 args")}if(f.isAfter(g)){var l=f.clone();f=g.clone(),g=l}var m=b.construct([f,g,h,i,j,e]);return m.calculate()},d.calculateDate=function(a,arguments,b){var c,f,g,h;b=!!b;switch(arguments.length){case 4:f=arguments[2],g=arguments[3];case 3:f=arguments[2];case 2:c=arguments[0],h=arguments[1];break;case 1:var i=arguments[0];if(!i||void 0==i.days&&void 0==i.workdays)c=i;else{if(void 0!=i.days&&void 0!=i.workdays)throw new e("days and weekdays args should not be used together, because weekdays is an alias of days");c=i.days?i.days:i.workdays,h=i.weekdays?i.weekdays:[1,2,3,4,5],f=i.exclusions,g=i.inclusions}break;default:new e("unexpected arguments length "+arguments.length+". Expecting 1 to 3 args")}var j=d.construct([a,h,f,g,b]);return j.calculate(c)},a.fn.weekdayCalc=function(){return b.calculateWeekdays(this,arguments)},a.fn.isoWeekdayCalc=function(){return b.calculateWeekdays(this,arguments,!0)},a.fn.addWorkdays=function(a,b,c){return d.calculateDate(this,[a,[1,2,3,4,5],b,c])},a.fn.workdaysToCalendarDays=function(a,b,c){var e=d.calculateDate(this,[a,[1,2,3,4,5],b,c]);return e.diff(this,"days")},a.fn.addWeekdaysFromSet=function(){return d.calculateDate(this,arguments)},a.fn.weekdaysFromSetToCalendarDays=function(){var a=d.calculateDate(this,arguments);return a.diff(this,"days")},a.fn.isoAddWeekdaysFromSet=function(){return d.calculateDate(this,arguments,!0)},a.fn.isoWeekdaysFromSetToCalendarDays=function(){var a=d.calculateDate(this,arguments,!0);return a.diff(this,"days")},"object"==typeof exports&&"undefined"!=typeof module?module.exports=b:"function"==typeof define&&define.amd?define(b):this.WeekDayCalc=b}(moment);
//# sourceMappingURL=moment-weekday-calc.min.js.map